// <auto-generated />
using HotelCatalog.Dal.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelCatalog.Dal.Migrations
{
    [DbContext(typeof(HotelCatalogDbContext))]
    [Migration("20251005153157_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelCatalog.Domain.Entities.ClientDiscount", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("integer")
                        .HasColumnName("clientid");

                    b.Property<int>("DiscountId")
                        .HasColumnType("integer")
                        .HasColumnName("discountid");

                    b.HasKey("ClientId", "DiscountId");

                    b.HasIndex("DiscountId");

                    b.ToTable("clientdiscounts", (string)null);
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.DiscountCategory", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("discountid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DiscountId"));

                    b.Property<decimal>("DiscountPercent")
                        .HasColumnType("numeric(5,2)")
                        .HasColumnName("discountpercent");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("DiscountId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("discountcategories", (string)null);

                    b.HasData(
                        new
                        {
                            DiscountId = 1,
                            DiscountPercent = 10.00m,
                            Name = "Student"
                        },
                        new
                        {
                            DiscountId = 2,
                            DiscountPercent = 15.00m,
                            Name = "Senior"
                        },
                        new
                        {
                            DiscountId = 3,
                            DiscountPercent = 20.00m,
                            Name = "VIP"
                        });
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.RoomCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("CategoryId");

                    b.HasIndex("Name");

                    b.ToTable("roomcategories", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Description = "Standard room with basic amenities",
                            Name = "Standard"
                        },
                        new
                        {
                            CategoryId = 2,
                            Description = "Deluxe room with premium amenities",
                            Name = "Deluxe"
                        },
                        new
                        {
                            CategoryId = 3,
                            Description = "Luxury suite with extra space",
                            Name = "Suite"
                        });
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.RoomService", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("categoryid");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    b.HasKey("CategoryId", "ServiceId");

                    b.HasIndex("ServiceId");

                    b.ToTable("roomservices", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ServiceId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ServiceId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ServiceId = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            ServiceId = 2
                        },
                        new
                        {
                            CategoryId = 2,
                            ServiceId = 3
                        },
                        new
                        {
                            CategoryId = 2,
                            ServiceId = 5
                        },
                        new
                        {
                            CategoryId = 3,
                            ServiceId = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            ServiceId = 2
                        },
                        new
                        {
                            CategoryId = 3,
                            ServiceId = 3
                        },
                        new
                        {
                            CategoryId = 3,
                            ServiceId = 4
                        },
                        new
                        {
                            CategoryId = 3,
                            ServiceId = 5
                        });
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("serviceid");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10,2)")
                        .HasColumnName("price");

                    b.HasKey("ServiceId");

                    b.HasIndex("Name");

                    b.ToTable("services", (string)null);

                    b.HasData(
                        new
                        {
                            ServiceId = 1,
                            Description = "High-speed internet",
                            Name = "WiFi",
                            Price = 0.00m
                        },
                        new
                        {
                            ServiceId = 2,
                            Description = "Continental breakfast",
                            Name = "Breakfast",
                            Price = 150.00m
                        },
                        new
                        {
                            ServiceId = 3,
                            Description = "Underground parking",
                            Name = "Parking",
                            Price = 100.00m
                        },
                        new
                        {
                            ServiceId = 4,
                            Description = "Spa and wellness center",
                            Name = "Spa",
                            Price = 500.00m
                        },
                        new
                        {
                            ServiceId = 5,
                            Description = "Swimming pool access",
                            Name = "Pool",
                            Price = 200.00m
                        });
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.ClientDiscount", b =>
                {
                    b.HasOne("HotelCatalog.Domain.Entities.DiscountCategory", "DiscountCategory")
                        .WithMany("ClientDiscounts")
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiscountCategory");
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.RoomService", b =>
                {
                    b.HasOne("HotelCatalog.Domain.Entities.RoomCategory", "RoomCategory")
                        .WithMany("RoomServices")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelCatalog.Domain.Entities.Service", "Service")
                        .WithMany("RoomServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomCategory");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.DiscountCategory", b =>
                {
                    b.Navigation("ClientDiscounts");
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.RoomCategory", b =>
                {
                    b.Navigation("RoomServices");
                });

            modelBuilder.Entity("HotelCatalog.Domain.Entities.Service", b =>
                {
                    b.Navigation("RoomServices");
                });
#pragma warning restore 612, 618
        }
    }
}
